

DROP TABLE if exists DEPARTAMENTO;

create table DEPARTAMENTO (
	CODIGO_DEPARTAMENTO INTEGER PRIMARY KEY,
	NOMBRE VARCHAR(50),
	PRESUPUESTO INTEGER

);

insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (1, 'Contabilidad', 100000);
insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (77, 'Investigacion', 60000);
insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (2, 'Mercadeo', 40000);
insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (14, 'Informatica', 30000);
insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (5, 'Recepcion', 75000);
insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (6, 'Calidad', 90000);
insert into DEPARTAMENTO (CODIGO_DEPARTAMENTO, NOMBRE, PRESUPUESTO) values (4, 'Compras', 45000);

DROP TABLE if exists EMPLEADO;

create table EMPLEADO (

	DNI INTEGER PRIMARY KEY,
	NOMBRE VARCHAR(50),
	APELLIDO VARCHAR(50),
	CODIGO_DEPARTAMENTO INTEGER,
	FOREIGN KEY (CODIGO_DEPARTAMENTO) REFERENCES DEPARTAMENTO(CODIGO_DEPARTAMENTO)

);


insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (1, 'Madelina', 'Lopez', 77);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (2, 'Aldus', 'Lopez', 2);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (3, 'Agretha', 'Perez', 77);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (4, 'Pedro', 'Martinez', 77);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (5, 'Camila', 'Rojas', 14);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (6, 'Vicente', 'Martinez', 4);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (7, 'Myranda', 'Rojas', 14);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (8, 'Kelly', 'Rojas', 1);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (9, 'Gisela', 'Rojas', 5);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (10, 'Carlos', 'Rojas', 6);
insert into EMPLEADO (DNI, NOMBRE, APELLIDO, CODIGO_DEPARTAMENTO) values (11, 'Ignacio', 'Rojas', 5);


-- KONECTA (Operaciones)

SELECT * FROM EMPLEADO AS E INNER JOIN departamento AS D ON E.CODIGO_DEPARTAMENTO=D.CODIGO_DEPARTAMENTO ORDER BY D.CODIGO_DEPARTAMENTO;

-- Obtiene todos los apellidos de los empleados
SELECT APELLIDO FROM EMPLEADO;

-- Apellidos sin repeticiones
SELECT DISTINCT APELLIDO FROM EMPLEADO;

-- Apellidos Lopez y Perez
SELECT * FROM EMPLEADO WHERE EMPLEADO.APELLIDO='Lopez' OR EMPLEADO.APELLIDO='Perez';

-- Presupuesto Total de Todos los Departamentos
SELECT CONCAT('El Presupuesto total de los Departamentos es: ',SUM(PRESUPUESTO)) AS PRESUPUESTO_TOTAL FROM DEPARTAMENTO;

-- Numero de empleados por departamento
SELECT COUNT(*) AS Personas, D.NOMBRE AS DEPARTAMENTO FROM EMPLEADO AS E INNER JOIN departamento AS D ON E.CODIGO_DEPARTAMENTO=D.CODIGO_DEPARTAMENTO GROUP BY D.NOMBRE ORDER BY D.CODIGO_DEPARTAMENTO;

-- Presupuesto mayor a 60.000
SELECT E.NOMBRE, E.APELLIDO, D.NOMBRE AS DEPARTAMENTO, D.PRESUPUESTO FROM EMPLEADO AS E INNER JOIN departamento AS D ON E.CODIGO_DEPARTAMENTO=D.CODIGO_DEPARTAMENTO WHERE D.PRESUPUESTO>60000;

-- Reasignacion de empleados
UPDATE EMPLEADO AS E SET E.CODIGO_DEPARTAMENTO =14 WHERE E.CODIGO_DEPARTAMENTO=77;

-- Eliminar empleado de informatica
DELETE FROM EMPLEADO WHERE CODIGO_DEPARTAMENTO = 14;